#!/usr/bin/env bash
################################################################################
# <START METADATA>
# @file_name: iris.conf
# @version: 0.0.40
# @project_name: iris
# @brief: config file for iris
#
# @save_tasks:
#  automated_versioning: true
#  automated_documentation: true
#
# @author: Jamie Dobbs (mschf)
# @author_contact: jamie.dobbs@mschf.dev
#
# @license: BSD-3 Clause (Included in LICENSE)
# Copyright (C) 2021-2022, Jamie Dobbs
# All rights reserved.
# shellcheck disable=2034
# <END METADATA>
################################################################################

################################################################################
# @description: iris configuration
################################################################################
_iris_per_user="false"; # set to true to use config file in $HOME/.config/iris/.conf
_iris_base_path="/opt/iris/src"; # iris installed path
_iris_official_modules=("shopt" "git" "pyenv" "readonly"); # enabled official modules
#_iris_custom_modules=(""); # enabled custom modules

################################################################################
# @description: prompt configuration
################################################################################
_prompt_input_newline="true"; # console input on new line: true/false
_prompt_nerd_font="false"; # change to true if nerd font is installed and enabled in your terminal (supplied in fonts): true/false
_prompt_input_symbol=">"; # console input symbol
_prompt_nerd_symbol="ï„…"; # console input symbol for nerd font
_prompt_ssh="true"; # shows if connected via ssh
_prompt_username="true"; # show current user on prompt: true/false
_prompt_hostname="ssh"; # show hostname on prompt: ssh,all,none
_prompt_dir="true"; # show dir on prompt: true/false
_prompt_display_error="true"; # displays error codes on prompt
_prompt_seperator=" "; # seperator between prompt informations
_prompt_wrapper="[]"; # wrapper for prompt information: 2 chars max (LR)
_prompt_success_color="71" # changes prompt input symbol to green if previous command is return 0
_prompt_fail_color="203"; # changes prompt input symbol to red if previous command does not return 0
_prompt_user_color="178"; # sets the user color in prompt
_prompt_sudo_color="215"; # sets the sudo color in prompt
_prompt_info_color="254"; # sets the info color in prompt
_prompt_input_color="254"; # sets the input color in prompt

################################################################################
# @description: BASH configuration
################################################################################
_bash_histappend="true"; # appends to history file instead of overwrite: true/false
_bash_cmdhist="true"; # save multiline bash inputs as one history entry: true/false
_bash_histreedit="true"; # opportunity to re-edit a failed history substitution: true/false
_bash_histverify="true"; # results of history substitution are loaded to editing buffer: true/false
_bash_icomments="true"; # allow a word beginning with # to cause that line to be ignored: true/false
_bash_checkwin="true"; # bash checks the window size after each external command and updates: true/false
_bash_globstar="true"; # ** will match all files and zero or more dirs: true/false
_bash_nocaseglob="true"; # bash matches filenames case-insensitively: true/false
_bash_autocd="true"; # command name of a directory is executed as if it were arg of a cd command: true/false
_bash_dirspell="true"; # bash attempts spelling correction if the dir name supplied does not exist: true/false
_bash_cdspell="true"; # bash attempts spelling correction during cd if dir name supplied does not exist: true/false
_bash_magic_space="false"; # enables history expansion on !: true/false
_bash_ignore_case="true"; # enables case-insensitivity on tab complete: true/false
_bash_show_all_ambig="true"; # words that have more than one possible completion with be listed immediately: true/false
_bash_mark_symlink_dir="true"; # completed names which are symlinks have a / appended: true/false

################################################################################
# @description: aliases
################################################################################
alias mkdir='mkdir -p'; # adds -p flag to mkdir as standard
alias ll="ls -laFh"; # ll as an easier alias for ls -laFh
alias la='ls -A'; # la as an easier alias for ls -A
alias hist='history|grep'; # search history with hist needle
alias count='find . -type f | wc -l'; # counts file list
alias nano='nano -W'; # adds -W flag to nano as standard

################################################################################
# @description: misc
################################################################################
declare -g HISTTIMEFORMAT='%F %T '; # time format for history
declare -g PROMPT_DIRTRIM="2"; # trims dir path after x dirs
[[ -z "$LC_CTYPE" && -z "$LC_ALL" ]] && declare -g LC_CTYPE="${LANG%%:*}"; # passes lang to lc_ctype
[[ -z "$HISTFILE" ]] && declare -g HISTFILE="$HOME/.bash_history"; # if no HISTFILE is set, sets it to $HOME/.bash_history